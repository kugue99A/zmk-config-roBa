#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W             &kp E               &kp R               &lt 1 T                                                        &kp Y                         &kp U                &lt 5 I                  &kp O                &kp P
&kp A           &kp S             &kp D               &kp F               &lt 2 G                      &kp LS(LG(S))      &kp MINUS      &kp H                         &kp J                &kp K                    &kp L                &kp RETURN
&mt LEFT_ALT Z  &mt LEFT_SHIFT X  &mt LEFT_CONTROL C  &mt LEFT_COMMAND V  &lt 3 B                      &kp COLON          &kp SEMICOLON  &kp N                         &mt RIGHT_COMMAND M  &mt RIGHT_CONTROL COMMA  &mt RIGHT_SHIFT DOT  &mt RIGHT_ALT SINGLE_QUOTE
&kp LCTRL       &kp LEFT_WIN      &kp LEFT_ALT        &mo 6               &mt LEFT_CONTROL LANGUAGE_2  &kp SPACE          &kp BACKSPACE  &mt RIGHT_COMMAND LANGUAGE_1                                                                     &kp SLASH
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        Number {
            bindings = <
&kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans                       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4      &kp NUMBER_5
&trans        &trans            &trans            &trans          &trans  &trans      &kp F13  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9      &kp NUMBER_0
&trans        &trans            &trans            &trans          &trans  &trans      &trans   &kp MINUS     &kp EQUAL     &kp SLASH     &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans        &trans            &trans            &trans          &trans  &trans      &kp TAB  &kp ESCAPE                                                  &kp BACKSLASH
            >;
        };

        Arrow {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7   &kp KP_NUMBER_8   &kp KP_NUMBER_9  &kp PLUS                                                   &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp SLASH                   &kp LEFT_COMMAND  &kp LEFT_CONTROL  &kp LEFT_SHIFT   &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp LEFT          &kp DOWN           &kp UP_ARROW    &kp RIGHT             &kp SEMICOLON
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1   &kp KP_NUMBER_2   &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp GRAVE             &kp SINGLE_QUOTE
&trans                      &trans            &trans            &trans           &trans        &trans                       &kp TAB         &kp ESCAPE                                                                 &kp PIPE
            >;
        };

        Function {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)      &trans                       &kp MINUS             &kp EQUAL             &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END  &trans      &trans  &trans                &kp RG(RS(NUMBER_3))  &kp SEMICOLON     &kp SINGLE_QUOTE   &kp RETURN
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LEFT_SHIFT   &trans   &trans      &trans  &kp RG(RS(NUMBER_4))  &kp RG(RS(NUMBER_5))  &kp COMMA         &kp PERIOD         &kp SLASH
&trans          &trans                  &trans          &trans           &trans   &trans      &trans  &trans                                                                           &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mo 5   &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        Bluetooth {
            bindings = <
&trans  &trans             &trans           &trans      &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans             &trans           &trans      &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans             &trans           &trans      &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
